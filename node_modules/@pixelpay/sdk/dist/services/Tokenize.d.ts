export default tokenize;
export type Card = import('../models/Card').default;
export type Billing = import('../models/Billing').default;
declare namespace tokenize {
    /**
     * Realiza la acción de crear una tarjeta
     *
     * @param {Card} card
     * @param {Billing} billing
     * @return {Promise}
     */
    function createCard(card: import("../models/Card").default, billing: import("../models/Billing").default): Promise<any>;
    /**
     * Realiza la acción de crear una tarjeta
     *
     * @param {Card} card
     * @param {Billing} billing
     * @return {Promise}
     */
    function createCard(card: import("../models/Card").default, billing: import("../models/Billing").default): Promise<any>;
    /**
     * Realiza la acción de traer la información de una tarjeta
     *
     * @param {*} token
     * @return {Promise}
     */
    function getCardMetadata(token: any): Promise<any>;
    /**
     * Realiza la acción de traer la información de una tarjeta
     *
     * @param {*} token
     * @return {Promise}
     */
    function getCardMetadata(token: any): Promise<any>;
    /**
     * Realiza la acción de actualizar la información de una tarjeta
     *
     * @param {Card} card
     * @param {Billing} billing
     * @param {String} token
     * @return {Promise}
     */
    function updateCard(card: import("../models/Card").default, billing: import("../models/Billing").default, token: string): Promise<any>;
    /**
     * Realiza la acción de actualizar la información de una tarjeta
     *
     * @param {Card} card
     * @param {Billing} billing
     * @param {String} token
     * @return {Promise}
     */
    function updateCard(card: import("../models/Card").default, billing: import("../models/Billing").default, token: string): Promise<any>;
    /**
     * Realiza la acción de eliminar una tarjeta.
     *
     * @param {String} token
     * @return {Promise}
     */
    function deleteCard(token: string): Promise<any>;
    /**
     * Realiza la acción de eliminar una tarjeta.
     *
     * @param {String} token
     * @return {Promise}
     */
    function deleteCard(token: string): Promise<any>;
    /**
     * Realiza la acción de crear un nuevo cliente del servicio de tokenización
     *
     * @param {String} email
     * @return {Promise}
     */
    function createCustomer(email: string): Promise<any>;
    /**
     * Realiza la acción de crear un nuevo cliente del servicio de tokenización
     *
     * @param {String} email
     * @return {Promise}
     */
    function createCustomer(email: string): Promise<any>;
    /**
     * Realiza la acción de obtener todas las tarjetas asociadas a un cliente del servicio de tokenización
     *
     * @param {String} token
     * @return {Promise}
     */
    function getCardsByCustomer(token: string): Promise<any>;
    /**
     * Realiza la acción de obtener todas las tarjetas asociadas a un cliente del servicio de tokenización
     *
     * @param {String} token
     * @return {Promise}
     */
    function getCardsByCustomer(token: string): Promise<any>;
}
